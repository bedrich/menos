#!/usr/bin/env node

var less = require('less');
var fs = require('fs');
var util = require('util');

// Say hello
console.log('Hello, Mr. ' + process.env.LOGNAME + ',');

// Is there a config file?
fs.exists(process.cwd() + '/menos.json', function (exists) {
	if (exists) {
		var config = JSON.parse(fs.readFileSync(process.cwd() + '/menos.json', 'utf-8'));
		console.log('I found a menos.json file, so I\'ll respect your wishes.\n');
		parseLess(config);
	} else {
		parseLess();
	}
});

function getLessFiles (dir, cb) {
	var filenames = [];

	fs.readdir(dir, function (err, files) {
		if (err) throw err;

		for (var i = 0, len = files.length; i < len; i++) {
			filenames.push(files[i].substring(0, files[i].length - 5));
		}
		cb(filenames);
	});
}

function parseLess (settings) {
	var lessDir = process.cwd() + '/less';
	var cssDir = process.cwd() + '/css';
	var minify = true;
	var cssExt;
	var opts;

	if (minify) {
		cssExt = '.min.css';
		opts = { compress: true, yuicompress: true };
	} else {
		cssExt = '.css';
		opts = { compress: false };
	}

	getLessFiles(lessDir, function (files) {
		// Do we have files to parse?
		if (files.length > 0) {
			_parse(0, files);
		}
	});

	function _parse(i, files) {
		var parser = new (less.Parser)({ 'paths': [lessDir] });
		var cssFile = files[i] + cssExt;
		var lessFile = files[i] + '.less';
		var lessBody = fs.readFileSync(lessDir + '/' + lessFile, 'utf-8');

		parser.parse(lessBody, function (err, tree) {
			if (err) throw err;

			fs.writeFileSync(cssDir + '/' + cssFile, tree.toCSS(opts));
			console.log(lessFile + ' ‚åÅ ' + cssFile);

			// Any more files to parse?
			if ((files.length - 1) != i) {
				_parse(i + 1, files);
			}
		});
	}
}