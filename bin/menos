#!/usr/bin/env node

var less = require('less');
var fs = require('fs');

// Say hello
console.log('Hello, Mr. ' + process.env.LOGNAME + ',');

// Is there a config file?
fs.exists(process.cwd() + '/menos.json', function (exists) {
	if (exists) {
		var config = JSON.parse(fs.readFileSync(process.cwd() + '/menos.json', 'utf-8'));
		console.log('I found a menos.json file, so I\'ll respect your wishes.\n');
		parseSetup(config);
	} else {
		console.log('Parsing files...\n');
		parseSetup({});
	}
});

function parseSetup (config) {
	var settings = {};

	settings.cssDir = config.path_css || process.cwd() + '/css';
	settings.lessDir = config.path_less || process.cwd() + '/less';
	settings.files = config.files || fs.readdirSync(settings.lessDir);

	// If minify was not set, or is true, assume true
	if (config.minify === null || config.minify === true) {
		settings.minify = true;
		settings.opts = { compress: true, yuicompress: true };
		settings.cssExt = '.min.css';
	} else {
		settings.minify = false;
		settings.opts = { compress: false };
		settings.cssExt = '.css';
	}

	// // Do we have files to parse?
	if (settings.files.length > 0) {
		parseFile(0, settings);
	}
}

function parseFile (i, settings) {
		var parser = new (less.Parser)({ 'paths': [settings.lessDir] });
		var cssFile = settings.files[i] + settings.cssExt;
		var lessFile = /\.less/.test(settings.files[i]) ? settings.files[i] : settings.files[i] + '.less';
		var lessBody = fs.readFileSync(settings.lessDir + '/' + lessFile, 'utf-8');

		parser.parse(lessBody, function (err, tree) {
			if (err) throw err;

			fs.writeFileSync(settings.cssDir + '/' + cssFile, tree.toCSS(settings.opts));
			console.log(lessFile + ' ‚åÅ ' + cssFile);

			// Any more files to parse?
			if ((settings.files.length - 1) != i) {
				parseFile(i + 1, settings);
			}
		});
	}